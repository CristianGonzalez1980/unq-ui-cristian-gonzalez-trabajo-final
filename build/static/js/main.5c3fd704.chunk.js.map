{"version":3,"sources":["images/piedra.png","images/papel.png","images/spock.png","images/tijera.png","images/lagarto.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","newGame","setState","userselection","undefined","machineselection","showCpuText","showOption","showButton","showAlertInfo","showAlertDanger","showAlertSucces","showAlertWarning","lastResult","resetGame","round","win","lose","tie","startMachinePlay","state","waitingMachine","showStadistics","checkResult","machSel","userSel","tiedGame","humanLost","humnaWin","showAlert","machineDoSelection","setTimeout","randomMachineOption","options","Math","floor","random","length","userDoSelection","event","target","id","showText","mostrarOpcion","img","text","src","alt","className","onMouseEnter","onMouseLeave","onClick","mostrarSelecion","fShow","fState","mostrarAlerta","welcomeMsg","this","tijera","spock","type","papel","lagarto","piedra","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c3fd704.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piedra.089d4610.png\";","module.exports = __webpack_public_path__ + \"static/media/papel.229a61b8.png\";","module.exports = __webpack_public_path__ + \"static/media/spock.f4ef3432.png\";","module.exports = __webpack_public_path__ + \"static/media/tijera.392c7b28.png\";","module.exports = __webpack_public_path__ + \"static/media/lagarto.50a771e2.png\";","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport piedra from './images/piedra.png';\nimport papel from './images/papel.png';\nimport spock from './images/spock.png';\nimport tijera from './images/tijera.png';\nimport lagarto from './images/lagarto.png';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userselection: undefined,\n      machineselection: undefined,\n      welcomeMsg: \"Bienvenido!\",\n      lastResult: \"¿Piedra, Papel, Tijera, Lagarto o Spock?\",\n      round: 0,\n      win: 0,\n      lose: 0,\n      tie: 0,\n      showText: false,\n      showOption: false,\n      showButton: true,\n      showCpuText: false,\n      showAlert: false,\n      showAlertInfo: true,\n      showAlertDanger: false,\n      showAlertSucces: false,\n      showAlertWarning: false,\n      options: ['Piedra', 'Papel', 'Tijera', 'Lagarto', 'Spock'],\n    };\n  }\n\n  newGame = () => {\n    this.setState({ userselection: undefined, machineselection: undefined, showCpuText: false, showOption: true, showButton: false, showAlertInfo: true, showAlertDanger: false, showAlertSucces: false, showAlertWarning: false, lastResult: \"Elige una opción\" })\n  }\n\n  resetGame = () => {\n    this.newGame()\n    this.setState({ round: 0, win: 0, lose: 0, tie: 0, lastResult: \"Volvamos a empezar\" });\n  }\n\n  startMachinePlay = () => {\n    let round = this.state.round;\n    round++\n    this.setState({ round });\n    this.waitingMachine();\n  }\n\n  showStadistics = () => {\n    return (\"Ronda \" + this.state.round + \"    Ganó: \" + this.state.win + \"    Perdió: \" + this.state.lose + \"    Empató: \" + this.state.tie);\n  }\n\n  checkResult = () => {\n    const machSel = this.state.machineselection;\n    const userSel = this.state.userselection;\n\n    if (machSel === userSel) { this.tiedGame() } else {\n\n      if ((machSel === 'Tijera' && (userSel === 'Papel' || userSel === 'Lagarto')) ||\n        (machSel === 'Papel' && (userSel === 'Piedra' || userSel === 'Spock')) ||\n        (machSel === 'Piedra' && (userSel === 'Lagarto' || userSel === 'Tijera')) ||\n        (machSel === 'Lagarto' && (userSel === 'Spock' || userSel === 'Papel')) ||\n        (machSel === 'Spock' && (userSel === 'Tijera' || userSel === 'Piedra'))) { this.humanLost() } else { this.humnaWin() }\n    }\n  }\n\n  humanLost = () => {\n    let lose = this.state.lose;\n    lose++\n    this.setState({ lose, lastResult: \"Perdiste, probá otra vez!\", showAlertDanger: true });\n  }\n\n  humnaWin = () => {\n    let win = this.state.win;\n    win++\n    this.setState({ win, lastResult: \"Bravo, ganaste!\", showAlertSucces: true });\n  }\n\n  tiedGame = () => {\n    let tie = this.state.tie;\n    tie++\n    this.setState({ tie, lastResult: \"Ouch se produjo un empate!\", showAlertWarning: true });\n  }\n\n  waitingMachine = () => {\n    this.setState({ lastResult: \"...Piedra, Papel, Tijera, Lagarto, Spock\", showAlert: true });\n\n    this.machineDoSelection();\n    setTimeout(() => {\n      this.checkResult(); this.setState({ showAlert: false, showButton: true, showCpuText: true })\n    }, 4000);\n  }\n\n  machineDoSelection = () => {\n    const machineselection = this.randomMachineOption();\n    this.setState({ machineselection });\n  }\n\n  randomMachineOption = () => {\n    const options = this.state.options;\n    const index = Math.floor(Math.random() * options.length);\n    return options[index];\n  }\n\n  userDoSelection = event => {\n    const userselection = event.target.id\n    this.setState({ userselection, showText: true, showOption: false, showButton: false, showAlertInfo: false })\n    this.startMachinePlay();\n  }\n\n  mostrarOpcion = (img, text) => {\n    return (\n      <>\n        {\n          this.state.showOption && (<img src={img} alt={text} className=\"cuadro\" id={text} onMouseEnter={() => this.setState({ showText: true, userselection: text })}\n            onMouseLeave={() => this.setState({ showText: false })} onClick={(event) => this.userDoSelection(event)} />)\n        }\n      </>\n    )\n  }\n\n  mostrarSelecion = (id, fShow, fState, text) => {\n    return (\n      <div className=\"bar-sel\">\n        <div className=\"row-sel\" id={id}>\n          <div>{text}</div>\n        </div>\n        <div className=\"row-sel\" id={id}>\n          {fShow && (<div className=\"selText\"><span>{fState}</span></div>)}\n        </div>\n      </div>\n    )\n  }\n\n  mostrarAlerta = () => {\n    return (\n        <div className=\"row\">\n          <div>{this.state.showAlertInfo && (<div className=\"welcome\"><div>{this.state.welcomeMsg}</div><div>{this.state.lastResult}</div></div>)}\n          </div>\n          <div>{this.state.showAlertDanger && (<h5 className=\"alert alert-danger\"> {this.state.lastResult} </h5>)}\n          </div>\n          <div>{this.state.showAlertSucces && (<h5 className=\"alert alert-success\"> {this.state.lastResult} </h5>)}\n          </div>\n          <div>{this.state.showAlertWarning && (<h5 className=\"alert alert-warning\"> {this.state.lastResult} </h5>)}\n          </div>\n        </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App-super\">\n        <div className=\"App-container\">\n          <header className=\"App-header\">\n            {this.mostrarAlerta()}\n          </header>\n          <body className=\"App-body\">\n            <div className=\"container\">\n              <div className=\"row justify-content-around\">\n                <div className=\"col-4.5\">\n                  {this.mostrarSelecion(\"hum\", this.state.showText, this.state.userselection, \"Tu elección: \")}\n                </div>\n                <div className=\"col-4.5\">\n                  {this.mostrarSelecion(\"cpu\", this.state.showCpuText, this.state.machineselection, \"Elección robot: \")}\n                </div>\n              </div>\n              <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                  {this.mostrarOpcion(tijera, \"Tijera\")}\n                </div>\n              </div>\n              <div className=\"row justify-content-around\">\n                <div className=\"col-3-9\">\n                  {this.mostrarOpcion(spock, \"Spock\")}\n                </div>\n                <div className=\"col-btn-auto\">\n                  <div>\n                    {this.state.showButton && <button type=\"button\" className=\"btn-danger\" onClick={() => this.newGame()}>Jugar</button>}\n                  </div>\n                  <div>\n                    {this.state.showAlert && <h6 id=\"msg\" className=\"alert alert-warning\"> {this.state.lastResult} </h6>}\n                  </div>\n                </div>\n                <div className=\"col-3-9\">\n                  {this.mostrarOpcion(papel, \"Papel\")}\n                </div>\n              </div>\n              <div className=\"row justify-content-around\">\n                <div className=\"col-4\">\n                  {this.mostrarOpcion(lagarto, \"Lagarto\")}\n                </div>\n                <div className=\"col-4\">\n                  {this.mostrarOpcion(piedra, \"Piedra\")}\n                </div>\n              </div>\n            </div>\n          </body>\n          <div className=\"App-bottom\" id=\"botom-text\">\n            <div className=\"row\">\n              <h1 className=\"text-success\"> {this.showStadistics()} </h1>\n            </div>\n            <div className=\"row\">\n              {this.state.showButton && <button type=\"button\" className=\"btn-reset\" onClick={() => this.resetGame()}>Reiniciar Marcador</button>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}